building and installing zope from source welcome to zope this document describes building and installing zope on unix and linux see windowstxt for information about windows see the platforms directory for notes about various other platforms system requirements when building from source bash or another bourne shell variant python 242 or later installed somewhere in the system path gnu make c compiler gcc recommended recommendations you are recommended to build and install zope as nonroot user building zope to build zope run the conventional unix build sequence from within the zope source tree configure prefixwheretoinstallzope make if you do not specify prefix option during later step zope will be installed into default location if the configure script cannot find suitable python interpreter for use with zope it will complain with an informative error message if this happens you may use the withpython commandline option to configure to specify which python interpreter to use run configure help to see other commandline options available via the configure script optional building and installing zope inplace svn checkouts only older versions of zope were typically run directly from the source directory itself this is useful for development purposes you can regain that behavior by performing the following sequence of commands within zope source directory configure make instance this command also creates an administrative user with the specified username and password warning make instance doesnt work on freebsd 50 and presumably other platforms you should either use gnu make gmake instance or use make install instead making an inplace instance builds the binary files and creates the files necessary for zope instance to be run directly within the build directory eg inplace you may start zope by running binzopectl start see logeventlog for any output which may happen during start of zope if anything goes wrong you will see there if you use binzopectl fg instead the output is generated to the screen in this case zope does not detach from terminal optional building zope using the cleansourcetree method you can run the configure command from outside of the zope source tree if you do so the makefile will be written to your current directory the files generated by the build process via make will be written to the directory from which you run configure you can then use make install to install these files to their canonical locations this feature is to support source locations which are not writable installing zope to install zope to the place youve specified via the prefix option or to the default location if you didnt specify prefix type make install creating zope instance home once youve performed the install step to begin actually using zope you will need to create an instance home which is directory that contains configuration and data for zope server process the instance home is created using the mkzopeinstancepy script wheretoinstallzopebinmkzopeinstancepy you will be asked to provide user name and password for an administrators account during mkzopeinstance commandline options to mkzopeinstance are available and can be investigated by running mkzopeinstancepy help starting zope once an instance home has been created the zope server can now be started using this command locationofzopeinstancebinzopectl start during start zope emits log messages into logeventlog you can examine it with the usual tools cat more tail and see if there are any errors preventing zope from starting locationofzopeinstancebinzopectl fg can be used to instead output these messages to the console this way zope does not detach from terminal if you get errors indicating that addresses are in use then you will have to supply arguments to runzope to change the ports used for http or ftp the default http and ftp ports used by zope are 8080 and 8021 respectively you can change the ports used by editing etczopeconf apropriately the section usually is like this httpserver valid keys are address and forceconnectionclose address 8080 forceconnectionclose on httpserver address can just be port number as shown but also hostport pair to bind to specific interface only zopectl can be linked as rcscript in the usual start directories on linux or other system v unix variants you can use zopectl interactively as command shell by just calling it wo any arguments try help there and help command to find out about additionally commands of zopectl these commands work also on command line by default zopectl start will start background process that manages zope and zopectl stop will stop the background process logging in to zope once youve started zope you can then connect to the zope webserver by directing your browser to httpyourhost8080manage where yourhost is the dns name or ip address of the machine running zope if you changed the http port as described use port number of 8080 the portbase value you will be prompted for user name and password use the user name and password you provided in response to the prompts issued during the make instance process now youre off and running you should be looking at the zope management screen which is divided into two frames on the left you can navigate between zope objects and on the right you can edit them by selecting different management functions with the tabs at the top of the frame if you havent used zope before you should head to the zope web site and read some documentation the zope book is good place to start you can access the zope book at httpwwwzopeorgdocumentationbookszopebook integrating zope with an existing webserver zope doesnt require any existing webserver to run but you can integrate it with other webservers as necessary see the webservertxt file for more information about configuring zope with an existing web server there is also information about integrating zope with existing webservers on the zopeorg website troubleshooting this version of zope requires python 241 or better the python you run zope with must have threads compiled in which is the case for vanilla build warning zope will not run with python version that uses libpth you must use libpthread to build python extensions you need to have python configuration information available if your python comes from an rpm you may need the pythondevel or pythondev package installed too if you built python from source all the configuration information should already be available see changestxt for important notes on this version of zope