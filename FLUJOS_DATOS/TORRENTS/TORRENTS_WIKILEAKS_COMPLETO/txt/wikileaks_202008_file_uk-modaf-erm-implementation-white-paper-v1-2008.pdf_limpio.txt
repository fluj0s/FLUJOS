1 of 10 integration authority mod abbey wood 2308 bristol uk bs34 8jh implementing the modaf enterprise reference model 10 14 february 2005 ia0216ermcm02 prepared by name ian bailey post title ia1dcon5 phone 44 0117 913 4045 mobile 44 07768 892 362 email ianbaileycornwellcouk approved by name mr north post title ia1d phone 44 0117 913 4237 fax 44 0117 913 4935 email ia1adpamoduk hm government defence integration authority 2 of 10 record of changes this page will be updated and reissued with each amendment it provides an authorisation for the amendment and checklist to the current amendment number issue date revision details draft 01 14 december 2004 first draft for internal review draft 02 18 january 2005 modifications in line with xmi strategy draft 03 01 february 2005 minor edits release 10 14 february 2005 cosmetic changes prior to release copyright details the copyright in this work is vested in her britannic majestys government nothing contained herein should be c onstrued as endorsing any particular tec hnical solution to any united kingdom government invitation to tender this document is the property of her britanni c majestys government and is issued for the information of such persons only as need to know its contents in the course of their offici duties any person finding this document should hand it in to britis h forces unit or to police station for safe return to the security officer integration authority dpa mod bristol with particu lars of when and how found the unauthorised retention or destruction of the document is an offence under the official secrets act 19111989 when released to persons outsi government service this document is i ssued on personal basis and the recipient to whom it is entrusted in confidence within the provisions of the official secr ets act 19111989 is personally responsible for its safe custody and for seeing that its c ontents are disclosed only to authorised persons 3 of 10 summary this paper examines the different implementation approaches that can support data exchange and sharing based on the mods enterprise reference model erm the paper also outlines the technologies xmi web services that are to be used it is proposed to use twolevel modelling approach conceptual and logical layers with the erm taking the role of conceptual model and driving the logical implementation models for data exchange and web services the physical layer is taken care of using model driven approach the xmi and web services standards are used to implement the logical models directly for filebased data exchange it is proposed to use xmi the uml model interchange specification based on xml the choice of xml is rather obvious and xmi is also logical choice given that the goal is to exchange architectural models to add the necessary rigour for modaf the xmi interchange will make use of uml stereotypes the stereotypes will be formally specified in the modaf metam odel which will extend the uml and sysml meta models when it comes to data sharing services for the mars mod architectural repository system the decision on implementation approach is less obvious web services and corba are both suitable implementation technologies and both can be specified using modeldriven approach web services are the easier technology to implement allow reuse of the xml schema specified for data exchange so would seem to the obvious candidate 4 of 10 introduction the mod architectural framework modaf is underpinned by conceptual information model the enterprise reference model erm the purpose of this model is to define the nature of the information that makes up an architecture the model does not seek to capture the layout and graphics but the meaning behind the architectural elements ie the model deals with systems organizations networks etc rather than boxes lines and bitmaps the erm is not intended to be implemented directly ie it is conceptual data model the scope of the erm may be greater than that of modaf but the entire scope of modaf is covered by the erm the diagram below show s how the elements displayed in somewhat crude modaf sv1 view map onto elements defined in the erm equipment platform systemhostserm modaf sv1 bowmantargetingmk8 gun torpedo ecm fire control the erm serves several purposes to provide semantic underpinning for modaf to provide the basis for the modaf metamodel which will be used to specify the data exchange between tools xmi to drive the requirements for an mod enterprise architecture repository mars to drive the specification of the services exposed by mars the erm has had number of influences in its development as well as existing mod architectural models the erm modellers hav also considered t he dodaf cadm model and indevelopment standards such as the sysml metamodel omg and ap233 iso the cadm is very rich and detailed model with some 600 entity definitions based on vendor feedback on cadm it was decided that something more manageable was needed for modaf hence the erm is meant to be higher level model than cadm and relies on the modaf taxonomy to add richness and detail in addition the mod has in consultation with tool vendors opted to specify the omgs xmi specification1 for data exchange between modaf tools any modaf tool data exchange will use combination of xmi with an appropriate uml profile to define the file structure and the modaf taxonomy to provide reference data 1 see ia document on uml xmi ia0216ermcm03 5 of 10 modaf tool modaf tool b data exchange ermstructure meaning xmixmi taxonomysdfjhsdfjhsdf sdfjdsfknweiewnmn dfldsflmc sdfkmsdm sdfsdf weo 0fhebhn fefwef sdfmdfdsfgsdf sdfsdfgksdfgnf sdfsdofjnsdf sdfhsd eidjjd dsofhsdfoh eee sdadsd wewqf fee sdfksdj fweewmew ewftaxonomysdfjhsdfjhsdf sdfjdsfknweiewnmn dfldsflmc sdfkmsdm sdfsdf weo 0fhebhn fefwef sdfmdfdsfgsdf sdfsdfgksdfgnf sdfsdofjnsdf sdfhsd eidjjd dsofhsdfoh eee sdadsd wewqf fee sdfksdj fweewmew ewf the erm is still subject to change as the modaf development team and pilot projects discover functionality that is not currently covered the erm is to be managed using change process based on the w3c change process the traceability from the erm to the modaf metamodel and the repository services specification will be maintained in mapping document that tracks changes in any of the models data exchange the key requirement for the erm is that it must cover all the concepts needed to describe an enterprise architecture the requirements for data exchange model are somewhat different the erm does not have to concern itself with the everyday problems of tooltotool exchange and can act as an undiluted specification of what the business requires the model that is used to define the data exchange has to take into account several implementation issues the key one being the requirement to use xmi as the format for data exchange xmi is flexible interchange format that is dependent on the modelling language used though its usually used to exchange uml m odels for uml xmi what most people mean when they say xmi the xmi structure is defined by the uml metamodel in other words if the uml metamodel is altered the xmi output changes and will not be readable by standard tools this places key restriction on how the model for data exchange is specified in order to achieve maximum reuse of existing xmi interfaces the uml meta model cannot be changed it can only be extended the very nature of extending model places number of restrictions on how the modeller can work the choice of xmi was not arrived at easily the obvious candidate for file structure based on data model is xml schema it is relati vely easy to derive an xml schema from an information model provided that the model take s into account some of the limitations of xml schema this would probably be the easiest option for the modaf team as it is easier to specify than modaf model based on the uml metamodel however the tool vendors most of whom support xmi already would hav to develop xml interfaces from scratch xmi is an xml format though and most of the advantages of the pure xml approach also apply to the xmi approach there are number of xml tools in existence most are very robust implementations many of which are freely available or even opensource2 the other advantage of xml is that most vendors already support it in some form or other and their development teams are familiar with it the downside to xml is that files tend to be large as the tagging syntax can be somewhat inefficient the files do compress well using commonly available algorithms such as those used in zip files 2 open source software is freely available and is provided with the source code this type of software is usually subject to an open licenses such as the gn u public license which restricts the reuse of the software without appropriat recognition of the authors 6 of 10 xml was not the only option considered though other file formats exist that can be used to implement data models the simplest and most obvious candidate is comma separated variable csv this format has been used to dump relational database tables and spreadsheets for years where csv falls down is its inability to enforce the rules of complex data model relationships can only be represented by key values and there is computer interpretable schema to define the columns of data another solution is to use the specifications developed for iso10303 the standard for the exchange of product model data this standard has its own modelling language called express part 11 of the standard and file format for exchanging data which conforms to the express models part 21 as the modelling language and the file format were developed together there is close correspondence which allows detailed file content checking the standard has been used successfully for years but industry is beginning to demand xml schema implementations as result new part of the standard part 28 has been developed to provide an xml implementation of the express models many other file formats exist though most text encodings are being superseded by xml binary formats such as asn1 should be considered if there is large amount of binary data eg bitmaps videos etc to be taken care of this is not the case for the erm so xml despite some of the limitations of xml schema seems to offer the best solution for architecture interchange the modaf metamodel to use vanilla uml xmi for data exchange requires that uml stereotypes are specified for each of the items that are used in the architec tural framework eg systems capabilities acquisition clusters operational nodes etc if the information in the exchange file is to be sensible it also necessary to define stereotypes for all the possible relationships between those items eg procurerprocured capab ility parentchild etc these stereotypes when put together form uml profile there is formal way to specify uml profile by extending the uml metamodel for modaf it is proposed that this extended model be based on the sysml3 specification and be called the modaf metamodel the development of this metamodel will be driven by the content of the modaf views this is the priority for data exchange and by the concepts specified in the erm the modaf metamodel is not yet specified but some early attempts models have been developed for the new modaf views such as acv1 note this example is not finalised and is subject to change 3 see wwwsysmlorg 7 of 10 although this is specification of uml profile for all intents and purposes it is an implementation logical data model as t he model extends an existing metamodel the elements defined tend to be counterintuitive to the uninitiated however the elements defined in the modaf metamodel can be traced back onto concepts defined in the erm enabling better understanding of how the model is used data sharing the enterprise reference model will also act as the basis for set of data sharing services defining the structure of the information that is shared number of approaches exist for data sharing most of them being based on remote service invocation ie client makes request to server and information is returned modaf tool modaf tool b lan wan server the information is requested and served using suitable protocol running over local or wide area network the key design decision is which protocol to use there are several approaches that suit this kind of architecture but four main ones are considered here web services corba microsoft com and rmi for mars possible services could be get all systems of certain type referring to taxonomy entry get all systems that can be connected to given system get all capabilities that are applicable to given epoch add an operational node connect two systems etc web services technology provides mechanism for businesstobusiness communication or more accurately machinetomachine communication they use an xml protocol for submitting requests and serving information w eb services server publishes the services it is able to offer defined in wsdl web services definition language the services can be anything but more often than not they involve some form of data access the data that is sent and received conforms to an xml schema as with the data exchange scenario where the erm acted as the logical model to drive the physical exchange schema the web services definitions can be derived from the erm concepts web services have become extremely popular bec ause of the simplicity of implementation server broadcasts what services it has available and clients can make use of those services provided they have access to the server additional levels of security can be added and the security issues are roughly the same as for an http web server from developers point of view web services are very easy to work with because they integrate well with most 8 of 10 existing development environment s and are hardware and neutral ie unix mac pc and linux machines can all communicate with the same web service without need for extra work the disadvantage with web services is that the protocol used is quite bulky lots of xml tags so can be slow when working with large amounts of data this is not usually apparent on fast local area networks but can cause performance problems on the internet another potential problem with web services is that two flavours of implementation have emerged the j2ee approach favoured by the java community and the net approach favoured by microsoft careful definition of the web services can help to mitigate these problems however corba stands for common object request broker architecture and is an omg standard corba is heavy duty services architecture best suited to local area network implementation it is fully object oriented and closely follows the class structure of uml which makes corba strong candidate for model driven architectures it uses standard protocol iiop for submissions and responses web services use xml and http corba implementations tend to be robust and largescale uml class models can be converted to idl then implemented as corba often using sets of standard services the omg has defined implementing full set of corba st andard services is quite daunting task however the downside to corba is that performance can be very slow when the data being shared is composed of many small obj ects corba works better if business objects are defined at high level aggregating lot of data into one place for the erm this would inevitably mean developing set of new classes with methods to support them corba is used by several large organizations for mission critical data particularly where the data is complex for smallerscale impl ementations web services would seem to be flavour of the month rather than corba com stands for component object model and is the basis for most microsoft windows applications there is distributed com technology dcom which provides similar functionality to corba whereas corba and web services are platform independent dcom is firmly in the microsoft domain though there have been attempts to develop com bridges to other technologies microsoft have made com very easy to implement and use and most programmers have had to work with com libraries at some point in their career performance is good on local area networks and dcom comes with less baggage than corba dcom tends not to be used over the internet though for performance and security reasons however its sibling activex is widely used on the web rmi standards for remote method invocation and is java technology allowing objects on distributed systems to invoke methods remotely effectively exposing the underlying java services to other java objects rmi is widel used but is javaonly technology again some attempts have been made at implementing bridges to other technologies rmi tends to be used on smallscale implementations on local area networks performance is very good and implementation is relatively easy for most experienced programmers the target implementation is mars the mod architectural repository system mars acts as an integrated shared data environment for enterprise architecture information the scope of data is probably greater for mars than for modaf tools eg mars will have to manage multiple versions of data elements ownership and time stamping issues for most enterprise architecture usage the data traffic will be relatively small and will mostly be text based or numeric data ie little or binary data the only time that large amounts of data will be transferred will be when complete architecture is requested which would probably best served as an exchange file anyway the requirement for platform independence is not altogether clear but it is apparent that the various enterprise architecture tools are implemented on different platforms given its ease of implementation web services seems the most obvious candidate for mars 9 of 10 as final point it is worth considering the architecture of mars initial proposals have concentrated on the idea of one centralized repository and multiple clients however servicesbased architecture would allow for multiple federated repositories which together act as one virtual repository clientclient clientclientclientclient clientclient clientclientclientclient server serverserver server clientclient clientclientclientclient clientclient in the example on the left given client uses the services on its local server however the data it is manipulating may be on another peer server located elsewhere the collection of servers provides connected federated data source in the example on the right all data is stored at the central server note that if the repository services are defined to allow it both approaches are possible layered model approach mda it is common practice in software engineering to define data structures at three levels4 the conceptual model is used to capture the business concepts and the relationships between them conceptual model usually has attributes or only those attributes considered key to the business the logical model is referentially correct model which considers matters of cardinality existence dependence etc to define the structure of the information the physical model is computerinterpretable s pecification based on the logical model which takes into account implementation aspects such as file format relational database tables etc traditionally the physical model has been developed from the logical model by hand but the drive towards standardsbased impl ementation means that physical models are increasingly generated automatically from the l ogical model model driven architecture conceptual logicalwsdlwsdl wsdldefinitions xmlnstypens httpsoapamazoncom xmlnsxsdhttpwwww3org2001xml schema xmlnssoap httpschemasxmlsoaporg wsdlsoap xmlnssoapenc httpschemasxmlsoap orgsoapencoding uml profile for xmiuml profile for xmi physicalomgsxmi specificationomgs xmi specification w3cs web services specificationw3cs web services specification 4 see httpwww1keydatacomdatawarehousingdatamodelinglevelshtml 10 of 10 the object management group omg has trademarked the term model driven architecture and mda when applied to so ftware systems although the term is trademarked the principles behind it are older than the omg itself data exchange initiatives such as iso step and plib have used model driven approach for years the basic idea of mda is that software implement ation is automatically derived from logical model in this case uml model in most mda implementations this means uml class model being used as the basis for database structure an exchange file message protocol and an api so from one model it is possible to derive all the data and interface aspects of an implementation more extrem applications of mda take the behavioural aspects of uml and derive functional software from this the erm is clear example of conceptual model it is statement of the information requirements for enterprise architecture in the mod to implement the erm an intermediate logical model will be required and method for generating the physical schema for data exchange the physical schema definition is already in place xmi the purpose of the logical model in this case is to constrain how the xmi is used for web services it may be possible to use the same logical model though the uml metamodel aspects may make it unsuitable for service definitions conclusions the erm is not suitable model for direct implementation in addition there is stated requirement for modaf to use xmi for tool interchange in order for this to be done properly uml profile for modaf will be required in order to constrain the xmi content the profile is to be specified by extending the uml metam odel effectively developing modaf meta model in the tradition of threelayer model development the erm is to act as conceptual model guiding the specification of the logical modaf metamodel it will also drive the development of web services specifications for mars the choice of xmi creates some issues for the modellers working on the modaf meta model it is not trivial task to extend the uml metamodel however the erm provides guidance for what information is to be handled and the modaf view specifications provide clear scope for that information when it comes to services implementation web services probably have the edge for the mars repository though corba is equally well suited in the end the recommendation has to be web services because of their sheer simplicity of use and popularity with implementers acknowledgements thanks go to the reviewers andy north ia fariba hozhabrafkan cornwell consulting